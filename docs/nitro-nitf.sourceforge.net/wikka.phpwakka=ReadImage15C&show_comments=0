<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>NITRO Wiki: Reading an Image in C (1.5)</title>
	<base href="" />
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
	<meta name="keywords" content="" />
	<meta name="description" content="" />
	<link rel="stylesheet" type="text/css" href="css/wikka.css?1.1.6.4" />
	<link rel="stylesheet" type="text/css" href="css/print.css" media="print" />
	<link rel="icon" href="images/favicon.ico" type="image/x-icon" />
	<link rel="shortcut icon" href="images/favicon.ico" type="image/x-icon" />
	<link rel="alternate" type="application/rss+xml" title="NITRO Wiki: revisions for ReadImage15C (RSS)" href="wikka.php?wakka=ReadImage15C%252Frevisions.xml" />
	<link rel="alternate" type="application/rss+xml" title="NITRO Wiki: recently edited pages (RSS)" href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=ReadImage15C/recentchanges.xml" />
</head>
<body  >
<div class="header">
	<h2><a id="homepage_link" href="index.html">NITRO Wiki</a> : <a href="wikka.php?wakka=ReadImage15C%252Fbacklinks" title="Display a list of pages linking to ReadImage15C">ReadImage15C</a></h2>
	<a href="index.html">HomePage</a> ::
	<a href="wikka.php?wakka=CategoryCategory">Categories</a> :: <a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=PageIndex">PageIndex</a> ::  <a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=RecentChanges">RecentChanges</a> :: <a href="wikka.php?wakka=RecentlyCommented">RecentlyCommented</a> :: <a href="wikka.php?wakka=UserSettings">Login/Register</a> 	
</div>

<!--starting page content-->
<div class="page">
<h4>Reading an Image in C (1.5)</h4>

<br />
There are many ways to read an image using the library. How you read it will determine the speed of the application and the memory footprint. Internally, the image deblocking code uses block-row caching when reading uncompressed imagery. It would be advantageous to your applications to read as much of the image as possible per read operation (obviously, without running out of memory). However, due to the block caching, reading on a per-row basis doesn't incur much of a penalty (with uncompressed imagery). Below we will walk you through some of the steps (and alternatives) of reading imagery.<br />
<br />
<h5>First off, we want to create a <a class="missingpage" href="wikka.php?wakka=SubWindowDef%252Fedit" title="Create this page">SubWindow</a>, which is used when conducting the read call.</h5>

<!--start GeSHi-->
<div class="code" style="font-family: monospace;">&nbsp; &nbsp; ...<br />
&nbsp; &nbsp; <span class="me1">subimage</span> = nitf_SubWindow_construct<span class="br0">&#40;</span>error<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; assert<span class="br0">&#40;</span>subimage<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* this is just an integer array of the bands you plan on requesting */</span><br />
&nbsp; &nbsp; bandList = <span class="br0">&#40;</span>nitf_Uint32 *<span class="br0">&#41;</span> NITF_MALLOC<span class="br0">&#40;</span><span class="kw4">sizeof</span><span class="br0">&#40;</span>nitf_Uint32 *<span class="br0">&#41;</span> * nBands<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; subimage-&gt;startCol = <span class="nu0">0</span>;<br />
&nbsp; &nbsp; subimage-&gt;startRow = <span class="nu0">0</span>;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* create a downsampler, if you want -- this is optional */</span><br />
&nbsp; &nbsp; pixelSkip = nitf_PixelSkip_construct<span class="br0">&#40;</span>rowSkipFactor, columnSkipFactor, error<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!pixelSkip<span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; nitf_Error_print<span class="br0">&#40;</span>error, stderr, <span class="st0">&quot;Pixel Skip construction failed&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">goto</span> CATCH_ERROR;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!nitf_SubWindow_setDownSampler<span class="br0">&#40;</span>subimage, pixelSkip, error<span class="br0">&#41;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; nitf_Error_print<span class="br0">&#40;</span>error, stderr, <span class="st0">&quot;Set down sampler failed&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">goto</span> CATCH_ERROR;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="coMULTI">/* for this example, just setup our SubWindow to request ALL bands -- this is how we do that */</span><br />
&nbsp; &nbsp; <span class="kw1">for</span> <span class="br0">&#40;</span>band = <span class="nu0">0</span>; band &lt; nBands; band++<span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; bandList<span class="br0">&#91;</span>band<span class="br0">&#93;</span> = band;<br />
&nbsp; &nbsp; subimage-&gt;bandList = bandList;<br />
&nbsp; &nbsp; subimage-&gt;numBands = nBands;<br />
&nbsp; &nbsp; ...</div>
<!--end GeSHi-->
<form action="http://nitro-nitf.sourceforge.net/wikka.php?wakka=ReadImage15C/grabcode" method="post" id="form_61092f4ded">
<fieldset class="hidden">
	<input type="hidden" name="wakka" value="ReadImage15C" />
</fieldset>
<input type="submit" class="grabcode" name="save" value="Grab" title="Download" /><input type="hidden" name="filename" value="" /><input type="hidden" name="code" value="%09...%0A%09subimage+%3D+nitf_SubWindow_construct%28error%29%3B%0A%09assert%28subimage%29%3B%0A%09%0A%09%2F%2A+this+is+just+an+integer+array+of+the+bands+you+plan+on+requesting+%2A%2F%0A%09bandList+%3D+%28nitf_Uint32+%2A%29+NITF_MALLOC%28sizeof%28nitf_Uint32+%2A%29+%2A+nBands%29%3B%0A%09subimage-%3EstartCol+%3D+0%3B%0A%09subimage-%3EstartRow+%3D+0%3B%0A%09%0A%09%2F%2A+create+a+downsampler%2C+if+you+want+--+this+is+optional+%2A%2F%0A%09pixelSkip+%3D+nitf_PixelSkip_construct%28rowSkipFactor%2C+columnSkipFactor%2C+error%29%3B%0A%09if+%28%21pixelSkip%29%0A%09%7B%0A%09%09nitf_Error_print%28error%2C+stderr%2C+%22Pixel+Skip+construction+failed%22%29%3B%0A%09%09goto+CATCH_ERROR%3B%0A%09%7D%0A%09if+%28%21nitf_SubWindow_setDownSampler%28subimage%2C+pixelSkip%2C+error%29%29%0A%09%7B%0A%09%09nitf_Error_print%28error%2C+stderr%2C+%22Set+down+sampler+failed%22%29%3B%0A%09%09goto+CATCH_ERROR%3B%0A%09%7D%0A%0A%09%09%2F%2A+for+this+example%2C+just+setup+our+SubWindow+to+request+ALL+bands+--+this+is+how+we+do+that+%2A%2F%0A%09for+%28band+%3D+0%3B+band+%3C+nBands%3B+band%2B%2B%29%0A%09%09bandList%5Bband%5D+%3D+band%3B%0A%09subimage-%3EbandList+%3D+bandList%3B%0A%09subimage-%3EnumBands+%3D+nBands%3B%0A%09..." /></form>
<br />
<br />
Next, you will want to decide how you want to read the image.<br />
<br />
<h5>The first example will read the entire image into memory at once.</h5>

<!--start GeSHi-->
<div class="code" style="font-family: monospace;">&nbsp; &nbsp; ...<br />
&nbsp; &nbsp; <span class="coMULTI">/* create a buffer, where the data will be stored -- one buffer per band */</span><br />
&nbsp; &nbsp; buffer = <span class="br0">&#40;</span>nitf_Uint8 **<span class="br0">&#41;</span> NITF_MALLOC<span class="br0">&#40;</span>nBands * <span class="kw4">sizeof</span><span class="br0">&#40;</span>nitf_Uint8*<span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; assert<span class="br0">&#40;</span>buffer<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="coMULTI">/* set the window to read ALL rows -- if downsampling, we must account for that */</span><br />
&nbsp; &nbsp; subimage-&gt;numRows = nRows / rowSkipFactor;<br />
&nbsp; &nbsp; <span class="coMULTI">/* set the window to read ALL columns -- if downsampling, we must account for that */</span><br />
&nbsp; &nbsp; subimage-&gt;numCols = nColumns / columnSkipFactor;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* create a size_t size variable that contains the number of bytes per read request */</span><br />
&nbsp; &nbsp; subimageSize = subimage-&gt;numCols * subimage-&gt;numRows * NITF_NBPP_TO_BYTES<span class="br0">&#40;</span>nBits<span class="br0">&#41;</span>;<br />
<br />
&nbsp; &nbsp; <span class="coMULTI">/* initialize each band of the buffer request */</span><br />
&nbsp; &nbsp; <span class="kw1">for</span> <span class="br0">&#40;</span>i = <span class="nu0">0</span>; i &lt; nBands; i++<span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; buffer<span class="br0">&#91;</span>i<span class="br0">&#93;</span> = <span class="br0">&#40;</span>nitf_Uint8 *<span class="br0">&#41;</span> NITF_MALLOC<span class="br0">&#40;</span>subimageSize<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; assert<span class="br0">&#40;</span>buffer<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* read the entire image! -- the padded variable will say whether the returned data was padded in any way */</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!nitf_ImageReader_read<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#40;</span>imageReader, subimage, buffer, &amp;padded, error<span class="br0">&#41;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; nitf_Error_print<span class="br0">&#40;</span>error, stderr, <span class="st0">&quot;Read failed&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">goto</span> CATCH_ERROR;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; ...</div>
<!--end GeSHi-->
<form action="http://nitro-nitf.sourceforge.net/wikka.php?wakka=ReadImage15C/grabcode" method="post" id="form_61092f4ded_1">
<fieldset class="hidden">
	<input type="hidden" name="wakka" value="ReadImage15C" />
</fieldset>
<input type="submit" class="grabcode" name="save" value="Grab" title="Download" /><input type="hidden" name="filename" value="" /><input type="hidden" name="code" value="%09...%0A%09%2F%2A+create+a+buffer%2C+where+the+data+will+be+stored+--+one+buffer+per+band+%2A%2F%0A%09buffer+%3D+%28nitf_Uint8+%2A%2A%29+NITF_MALLOC%28nBands+%2A+sizeof%28nitf_Uint8%2A%29%29%3B%0A%09assert%28buffer%29%3B%0A%09%2F%2A+set+the+window+to+read+ALL+rows+--+if+downsampling%2C+we+must+account+for+that+%2A%2F%0A%09subimage-%3EnumRows+%3D+nRows+%2F+rowSkipFactor%3B%0A%09%2F%2A+set+the+window+to+read+ALL+columns+--+if+downsampling%2C+we+must+account+for+that+%2A%2F%0A%09subimage-%3EnumCols+%3D+nColumns+%2F+columnSkipFactor%3B%0A%09%0A%09%2F%2A+create+a+size_t+size+variable+that+contains+the+number+of+bytes+per+read+request+%2A%2F%0A%09subimageSize+%3D+subimage-%3EnumCols+%2A+subimage-%3EnumRows+%2A+NITF_NBPP_TO_BYTES%28nBits%29%3B%0A%0A%09%2F%2A+initialize+each+band+of+the+buffer+request+%2A%2F%0A%09for+%28i+%3D+0%3B+i+%3C+nBands%3B+i%2B%2B%29%0A%09%7B%0A%09%09buffer%5Bi%5D+%3D+%28nitf_Uint8+%2A%29+NITF_MALLOC%28subimageSize%29%3B%0A%09%09assert%28buffer%5Bi%5D%29%3B%0A%09%7D%0A%09%0A%09%2F%2A+read+the+entire+image%21+--+the+padded+variable+will+say+whether+the+returned+data+was+padded+in+any+way+%2A%2F%0A%09if+%28%21nitf_ImageReader_read%0A%09%09%09%28imageReader%2C+subimage%2C+buffer%2C+%26padded%2C+error%29%29%0A%09%7B%0A%09%09nitf_Error_print%28error%2C+stderr%2C+%22Read+failed%22%29%3B%0A%09%09goto+CATCH_ERROR%3B%0A%09%7D%0A%09..." /></form>
<br />
<br />
<br />
<h5>This example shows how to read one row at a time.</h5>

<!--start GeSHi-->
<div class="code" style="font-family: monospace;">&nbsp; &nbsp; ...<br />
&nbsp; &nbsp; <span class="coMULTI">/* create a buffer, where the data will be stored -- one buffer per band */</span><br />
&nbsp; &nbsp; buffer = <span class="br0">&#40;</span>nitf_Uint8 **<span class="br0">&#41;</span> NITF_MALLOC<span class="br0">&#40;</span>nBands * <span class="kw4">sizeof</span><span class="br0">&#40;</span>nitf_Uint8*<span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; assert<span class="br0">&#40;</span>buffer<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="coMULTI">/* set the window to read one row at a time */</span><br />
&nbsp; &nbsp; subimage-&gt;numRows = <span class="nu0">1</span>;<br />
&nbsp; &nbsp; <span class="coMULTI">/* set the window to read ALL columns -- if downsampling, we must account for that */</span><br />
&nbsp; &nbsp; subimage-&gt;numCols = nColumns / columnSkipFactor;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* create a size_t size variable that contains the number of bytes per read request */</span><br />
&nbsp; &nbsp; subimageSize = subimage-&gt;numCols * subimage-&gt;numRows * NITF_NBPP_TO_BYTES<span class="br0">&#40;</span>nBits<span class="br0">&#41;</span>;<br />
<br />
&nbsp; &nbsp; <span class="coMULTI">/* initialize each band of the buffer request */</span><br />
&nbsp; &nbsp; <span class="kw1">for</span> <span class="br0">&#40;</span>i = <span class="nu0">0</span>; i &lt; nBands; i++<span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; buffer<span class="br0">&#91;</span>i<span class="br0">&#93;</span> = <span class="br0">&#40;</span>nitf_Uint8 *<span class="br0">&#41;</span> NITF_MALLOC<span class="br0">&#40;</span>subimageSize<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; assert<span class="br0">&#40;</span>buffer<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* loop over the rows, skipping if necessary */</span><br />
&nbsp; &nbsp; <span class="kw1">for</span><span class="br0">&#40;</span>i = <span class="nu0">0</span>; i &lt; nRows; i += rowSkipFactor<span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span>&nbsp; &nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; subimage-&gt;startRow = i;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!nitf_ImageReader_read<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#40;</span>imageReader, subimage, buffer, &amp;padded, error<span class="br0">&#41;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nitf_Error_print<span class="br0">&#40;</span>error, stderr, <span class="st0">&quot;Read failed&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">goto</span> CATCH_ERROR;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="coMULTI">/* do something with the data ... */</span><br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; ...</div>
<!--end GeSHi-->
<form action="http://nitro-nitf.sourceforge.net/wikka.php?wakka=ReadImage15C/grabcode" method="post" id="form_61092f4ded_2">
<fieldset class="hidden">
	<input type="hidden" name="wakka" value="ReadImage15C" />
</fieldset>
<input type="submit" class="grabcode" name="save" value="Grab" title="Download" /><input type="hidden" name="filename" value="" /><input type="hidden" name="code" value="%09...%0A%09%2F%2A+create+a+buffer%2C+where+the+data+will+be+stored+--+one+buffer+per+band+%2A%2F%0A%09buffer+%3D+%28nitf_Uint8+%2A%2A%29+NITF_MALLOC%28nBands+%2A+sizeof%28nitf_Uint8%2A%29%29%3B%0A%09assert%28buffer%29%3B%0A%09%2F%2A+set+the+window+to+read+one+row+at+a+time+%2A%2F%0A%09subimage-%3EnumRows+%3D+1%3B%0A%09%2F%2A+set+the+window+to+read+ALL+columns+--+if+downsampling%2C+we+must+account+for+that+%2A%2F%0A%09subimage-%3EnumCols+%3D+nColumns+%2F+columnSkipFactor%3B%0A%09%0A%09%2F%2A+create+a+size_t+size+variable+that+contains+the+number+of+bytes+per+read+request+%2A%2F%0A%09subimageSize+%3D+subimage-%3EnumCols+%2A+subimage-%3EnumRows+%2A+NITF_NBPP_TO_BYTES%28nBits%29%3B%0A%0A%09%2F%2A+initialize+each+band+of+the+buffer+request+%2A%2F%0A%09for+%28i+%3D+0%3B+i+%3C+nBands%3B+i%2B%2B%29%0A%09%7B%0A%09%09buffer%5Bi%5D+%3D+%28nitf_Uint8+%2A%29+NITF_MALLOC%28subimageSize%29%3B%0A%09%09assert%28buffer%5Bi%5D%29%3B%0A%09%7D%0A%09%0A%09%2F%2A+loop+over+the+rows%2C+skipping+if+necessary+%2A%2F%0A%09for%28i+%3D+0%3B+i+%3C+nRows%3B+i+%2B%3D+rowSkipFactor%29%0A%09%7B%09%0A%09%09subimage-%3EstartRow+%3D+i%3B%0A%09%09if+%28%21nitf_ImageReader_read%0A%09%09%09%09%28imageReader%2C+subimage%2C+buffer%2C+%26padded%2C+error%29%29%0A%09%09%7B%0A%09%09%09nitf_Error_print%28error%2C+stderr%2C+%22Read+failed%22%29%3B%0A%09%09%09goto+CATCH_ERROR%3B%0A%09%09%7D%0A%09%09%2F%2A+do+something+with+the+data+...+%2A%2F%0A%09%7D%0A%09..." /></form>
<br />
<br />
In version 1.5 of the NITF library, an additional feature is available for RGB 24-bit data, and for IQ complex data, when the data is band interleaved by pixel.  Instead of asking the library to deinterleave the pixels as it usually, would, you can ask for the data to be treated as a single band of data.  For the 24-bit case, for instance, you can set the number of bands in the sub window to 1, and allocating the sub image buffer size to 3 times the usual amount:<br />
<br />
<!--start GeSHi-->
<div class="code" style="font-family: monospace;">&nbsp; &nbsp; <span class="coMULTI">/* for RGB24 images, let's just write out the 1 band<br />
&nbsp; &nbsp; &nbsp;* - this will be MUCH faster<br />
&nbsp; &nbsp; &nbsp;*/</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>nBands == <span class="nu0">3</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &amp;&amp; segment-&gt;subheader-&gt;imageMode-&gt;raw<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> == <span class="st0">'P'</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &amp;&amp; strncmp<span class="br0">&#40;</span><span class="st0">&quot;RGB&quot;</span>, segment-&gt;subheader-&gt;imageRepresentation-&gt;raw, <span class="nu0">3</span><span class="br0">&#41;</span> == <span class="nu0">0</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &amp;&amp; NITF_NBPP_TO_BYTES<span class="br0">&#40;</span>nBits<span class="br0">&#41;</span> == <span class="nu0">1</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &amp;&amp; <span class="br0">&#40;</span>strncmp<span class="br0">&#40;</span><span class="st0">&quot;NC&quot;</span>, segment-&gt;subheader-&gt;imageCompression-&gt;raw, <span class="nu0">2</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; || strncmp<span class="br0">&#40;</span><span class="st0">&quot;NM&quot;</span>, segment-&gt;subheader-&gt;imageCompression-&gt;raw, <span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; subimageSize *= nBands;<br />
&nbsp; &nbsp; &nbsp; &nbsp; nBands = <span class="nu0">1</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;**Using optimization to write out a 3-band RGB pix-interleaved image**<span class="es0">\n</span>&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
<br />
&nbsp; &nbsp; subimage = nitf_SubWindow_construct<span class="br0">&#40;</span>error<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; assert<span class="br0">&#40;</span>subimage<span class="br0">&#41;</span>;<br />
<br />
&nbsp; &nbsp; buffer = <span class="br0">&#40;</span>nitf_Uint8 **<span class="br0">&#41;</span> NITF_MALLOC<span class="br0">&#40;</span>nBands * <span class="kw4">sizeof</span><span class="br0">&#40;</span>nitf_Uint8*<span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; band = <span class="nu0">0</span>;<br />
&nbsp; &nbsp; bandList = <span class="br0">&#40;</span>nitf_Uint32 *<span class="br0">&#41;</span> NITF_MALLOC<span class="br0">&#40;</span><span class="kw4">sizeof</span><span class="br0">&#40;</span>nitf_Uint32 *<span class="br0">&#41;</span> * nBands<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; subimage-&gt;startCol = <span class="nu0">0</span>;<br />
&nbsp; &nbsp; subimage-&gt;startRow = <span class="nu0">0</span>;<br />
&nbsp; &nbsp; subimage-&gt;numRows = nRows / rowSkipFactor;<br />
&nbsp; &nbsp; subimage-&gt;numCols = nColumns / columnSkipFactor;<br />
<br />
&nbsp; &nbsp; pixelSkip = nitf_PixelSkip_construct<span class="br0">&#40;</span>rowSkipFactor, columnSkipFactor, error<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!pixelSkip<span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; nitf_Error_print<span class="br0">&#40;</span>error, stderr, <span class="st0">&quot;Pixel Skip construction failed&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">goto</span> CATCH_ERROR;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!nitf_SubWindow_setDownSampler<span class="br0">&#40;</span>subimage, pixelSkip, error<span class="br0">&#41;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; nitf_Error_print<span class="br0">&#40;</span>error, stderr, <span class="st0">&quot;Set down sampler failed&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">goto</span> CATCH_ERROR;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
<br />
&nbsp; &nbsp; <span class="kw1">for</span> <span class="br0">&#40;</span>band = <span class="nu0">0</span>; band &lt; nBands; band++<span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; bandList<span class="br0">&#91;</span>band<span class="br0">&#93;</span> = band;<br />
&nbsp; &nbsp; subimage-&gt;bandList = bandList;<br />
&nbsp; &nbsp; subimage-&gt;numBands = nBands;</div>
<!--end GeSHi-->
<form action="http://nitro-nitf.sourceforge.net/wikka.php?wakka=ReadImage15C/grabcode" method="post" id="form_61092f4ded_3">
<fieldset class="hidden">
	<input type="hidden" name="wakka" value="ReadImage15C" />
</fieldset>
<input type="submit" class="grabcode" name="save" value="Grab" title="Download" /><input type="hidden" name="filename" value="" /><input type="hidden" name="code" value="%09%2F%2A+for+RGB24+images%2C+let%27s+just+write+out+the+1+band%0A%09+%2A+-+this+will+be+MUCH+faster%0A%09+%2A%2F%0A%09if+%28nBands+%3D%3D+3%0A%09%09%26%26+segment-%3Esubheader-%3EimageMode-%3Eraw%5B0%5D+%3D%3D+%27P%27%0A%09%09%26%26+strncmp%28%22RGB%22%2C+segment-%3Esubheader-%3EimageRepresentation-%3Eraw%2C+3%29+%3D%3D+0%0A%09%09%26%26+NITF_NBPP_TO_BYTES%28nBits%29+%3D%3D+1%0A%09%09%26%26+%28strncmp%28%22NC%22%2C+segment-%3Esubheader-%3EimageCompression-%3Eraw%2C+2%29%0A%09%09%09%7C%7C+strncmp%28%22NM%22%2C+segment-%3Esubheader-%3EimageCompression-%3Eraw%2C+2%29%29%29%0A%09%7B%0A%09%09subimageSize+%2A%3D+nBands%3B%0A%09%09nBands+%3D+1%3B%0A%09%09printf%28%22%2A%2AUsing+optimization+to+write+out+a+3-band+RGB+pix-interleaved+image%2A%2A%5Cn%22%29%3B%0A%09%7D%0A%0A%09subimage+%3D+nitf_SubWindow_construct%28error%29%3B%0A%09assert%28subimage%29%3B%0A%0A%09buffer+%3D+%28nitf_Uint8+%2A%2A%29+NITF_MALLOC%28nBands+%2A+sizeof%28nitf_Uint8%2A%29%29%3B%0A%09band+%3D+0%3B%0A%09bandList+%3D+%28nitf_Uint32+%2A%29+NITF_MALLOC%28sizeof%28nitf_Uint32+%2A%29+%2A+nBands%29%3B%0A%09subimage-%3EstartCol+%3D+0%3B%0A%09subimage-%3EstartRow+%3D+0%3B%0A%09subimage-%3EnumRows+%3D+nRows+%2F+rowSkipFactor%3B%0A%09subimage-%3EnumCols+%3D+nColumns+%2F+columnSkipFactor%3B%0A%0A%09pixelSkip+%3D+nitf_PixelSkip_construct%28rowSkipFactor%2C+columnSkipFactor%2C+error%29%3B%0A%09if+%28%21pixelSkip%29%0A%09%7B%0A%09%09nitf_Error_print%28error%2C+stderr%2C+%22Pixel+Skip+construction+failed%22%29%3B%0A%09%09goto+CATCH_ERROR%3B%0A%09%7D%0A%09if+%28%21nitf_SubWindow_setDownSampler%28subimage%2C+pixelSkip%2C+error%29%29%0A%09%7B%0A%09%09nitf_Error_print%28error%2C+stderr%2C+%22Set+down+sampler+failed%22%29%3B%0A%09%09goto+CATCH_ERROR%3B%0A%09%7D%0A%0A%09for+%28band+%3D+0%3B+band+%3C+nBands%3B+band%2B%2B%29%0A%09%09bandList%5Bband%5D+%3D+band%3B%0A%09subimage-%3EbandList+%3D+bandList%3B%0A%09subimage-%3EnumBands+%3D+nBands%3B" /></form>
<br />
<br />
This is not necessary, but is an optional feature that offer huge potential gains over the standard deinterleaving, that is likely compounded by the fact that most programs would have to reinterleave the data in this fashion anyway to make use of it.<br />

</div>
				<div class="commentsheader">
				<p>There are 17 comments on this page. 				[<a href="wikka.php?wakka=ReadImage15C&amp;show_comments=1#comments">Display comments</a>]</p>
				</div>
				<div class="footer">
<form action="wikka.php?wakka=ReadImage15C" id="form_c2b696fff2">
<fieldset class="hidden">
	<input type="hidden" name="wakka" value="TextSearch" />
</fieldset>
<a href="wikka.php?wakka=ReadImage15C%252Fhistory" title="Click to view recent edits to this page">Page History</a> ::
<a class="datetime" href="wikka.php?wakka=ReadImage15C%252Frevisions" title="Click to view recent revisions list for this page">2008-04-23 05:31:26</a> <a href="wikka.php?wakka=ReadImage15C%252Frevisions.xml" title="Click to display a feed with the latest revisions to this page."><img src="images/xml.png" class="icon" width="36" height="14" alt="feed icon" /></a> ::
Owner: <a href="wikka.php?wakka=NitroAdmin">NitroAdmin</a> ::

 
Search: <input name="phrase" size="15" class="searchbox" />
</form>
</div>
<div class="smallprint">
<a class="ext" href="http://validator.w3.org/check/referer">Valid XHTML 1.0 Transitional</a><span class="exttail">&#8734;</span> ::
<a class="ext" href="http://jigsaw.w3.org/css-validator/check/referer">Valid CSS</a><span class="exttail">&#8734;</span> ::
Powered by <a class="ext" href="http://wikkawiki.org/">Wikka Wakka Wiki 1.1.6.4</a><span class="exttail">&#8734;</span></div>
<div style="float:left;">
<a href="http://sourceforge.net/" target="_blank" title="The world's largest development and download repository of Open Source code and applications"><img style="width: 151px; height: 38px;" src="http://web.sourceforge.com/images/footer/source.gif" alt="SourceForge.net" class="pad28" border="0" height="38" width="151"></a>
</div>
<div class="smallprint">Page was generated in 0.0766 seconds</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-3779761-1");
pageTracker._initData();
pageTracker._trackPageview();
</script>
<script type="text/javascript">
var pkBaseURL = (("https:" == document.location.protocol) ? "https://apps.sourceforge.net/piwik/nitro-nitf/" : "http://apps.sourceforge.net/piwik/nitro-nitf/");
document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
</script><script type="text/javascript">
piwik_action_name = '';
piwik_idsite = 1;
piwik_url = pkBaseURL + "piwik.php";
piwik_log(piwik_action_name, piwik_idsite, piwik_url);
</script>
<object><noscript><p><img src="http://apps.sourceforge.net/piwik/nitro-nitf/piwik.php?idsite=1" alt="piwik"/></p></noscript></object>
</body>
</html>