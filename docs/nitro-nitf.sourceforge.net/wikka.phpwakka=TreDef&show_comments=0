<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>NITRO Wiki: TRE</title>
	<base href="http://nitro-nitf.sourceforge.net/" />
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
	<meta name="keywords" content="" />
	<meta name="description" content="" />
	<link rel="stylesheet" type="text/css" href="css/wikka.css?1.1.6.4" />
	<link rel="stylesheet" type="text/css" href="css/print.css" media="print" />
	<link rel="icon" href="images/favicon.ico" type="image/x-icon" />
	<link rel="shortcut icon" href="images/favicon.ico" type="image/x-icon" />
	<link rel="alternate" type="application/rss+xml" title="NITRO Wiki: revisions for TreDef (RSS)" href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=TreDef/revisions.xml" />
	<link rel="alternate" type="application/rss+xml" title="NITRO Wiki: recently edited pages (RSS)" href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=TreDef/recentchanges.xml" />
</head>
<body  >
<div class="header">
	<h2><a id="homepage_link" href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=HomePage">NITRO Wiki</a> : <a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=TreDef/backlinks" title="Display a list of pages linking to TreDef">TreDef</a></h2>
	<a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=HomePage">HomePage</a> ::
	<a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=CategoryCategory">Categories</a> :: <a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=PageIndex">PageIndex</a> ::  <a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=RecentChanges">RecentChanges</a> :: <a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=RecentlyCommented">RecentlyCommented</a> :: <a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=UserSettings">Login/Register</a> 	
</div>

<!--starting page content-->
<div class="page">
<h4>TRE</h4>

<br />
TRE objects represent the Tagged Record Extensions found within a NITF file.  They contain <a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=FieldDef">Fields</a> which can be added, removed, retrieved or set.  TREs provided the basic capability for extending NITF files.  TREs may be present in any of the headers and subheaders found in the NITF.<br />
<br />
<h5>TRE Handler Interface </h5>

<br />
The TRE manages access to parsed data handled by its associated plug-in.  If no suitable plug-in is found, the default handler will be used.  It is up to the plug-in to handle how this data is stored, but currently the default implementation for most of the plug-ins uses a <a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=HashTableDef">hash table</a> internally.<br />
<br />
If you want to define your own TRE plug-in you simply have to fulfill the Handler interface. Copied below are the methods and documentation from the header file containing the definitions.<br />
<br />
<!--start GeSHi-->
<div class="code" style="font-family: monospace;"><span class="coMULTI">/*============================================================================*/</span><br />
<span class="coMULTI">/*===========================BEGIN TRE HANDLER API============================*/</span><br />
<span class="coMULTI">/*============================================================================*/</span><br />
<br />
<span class="coMULTI">/*!<br />
&nbsp;* The plug-in is allowed to do some initialization to prepare the TRE<br />
&nbsp;* \param tre &nbsp; &nbsp; &nbsp; The TRE to initialize<br />
&nbsp;* \param id &nbsp; &nbsp; &nbsp; &nbsp;An optional ID used to further specify a specific version, etc.<br />
&nbsp;* \param error &nbsp; &nbsp; The error object<br />
&nbsp;* \return &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;NITF_FAILURE if an error occurred, otherwise NITF_SUCCESS<br />
&nbsp;*/</span><br />
<span class="kw4">typedef</span> NITF_BOOL <span class="br0">&#40;</span>*NITF_TRE_INIT<span class="br0">&#41;</span> <span class="br0">&#40;</span>nitf_TRE* tre,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">const</span> <span class="kw4">char</span>* id,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nitf_Error * error<span class="br0">&#41;</span>;<br />
<br />
<span class="coMULTI">/*!<br />
&nbsp;* Read data from the given IOHandle, parsing it however the plug-in desires.<br />
&nbsp;* \param io &nbsp; &nbsp; &nbsp; &nbsp;The IOHandle we are reading from<br />
&nbsp;* \param length &nbsp; &nbsp;The length of the TRE (i.e. # of bytes to read)<br />
&nbsp;* \param tre &nbsp; &nbsp; &nbsp; The associated TRE<br />
&nbsp;* \param record &nbsp; &nbsp;The associated Record object<br />
&nbsp;* \param error &nbsp; &nbsp; The error object<br />
&nbsp;* \return &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;NITF_FAILURE if an error occurred, otherwise NITF_SUCCESS<br />
&nbsp;*/</span><br />
<span class="kw4">typedef</span> NITF_BOOL <span class="br0">&#40;</span>*NITF_TRE_READER<span class="br0">&#41;</span><span class="br0">&#40;</span>nitf_IOHandle io,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;nitf_Uint32 length,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;nitf_TRE *tre,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw4">struct</span> _nitf_Record *record,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;nitf_Error *error<span class="br0">&#41;</span>;<br />
<br />
<br />
<span class="coMULTI">/*!<br />
&nbsp;* Returns a nitf_List* of Fields that match the input XPath-like pattern.<br />
&nbsp;* \param tre &nbsp; &nbsp; &nbsp; The associated TRE<br />
&nbsp;* \param pattern &nbsp; The XPath pattern used to search for fields<br />
&nbsp;* \param error &nbsp; &nbsp; The error object<br />
&nbsp;* \return &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;nitf_List* of fields, or NULL if an error occurred<br />
&nbsp;*/</span><br />
<span class="kw4">typedef</span> nitf_List* <span class="br0">&#40;</span>*NITF_TRE_FIND<span class="br0">&#41;</span><span class="br0">&#40;</span>nitf_TRE * tre,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">const</span> <span class="kw4">char</span> *pattern,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nitf_Error* error<span class="br0">&#41;</span>;<br />
<br />
<br />
<span class="coMULTI">/*!<br />
&nbsp;* Sets a field in the given TRE. It is up to the plug-in to <br />
&nbsp;* \param tre &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; The associated TRE<br />
&nbsp;* \param tag &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; The name of the field<br />
&nbsp;* \param data &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;The data (void*) to set the field to<br />
&nbsp;* \param dataLength &nbsp; &nbsp;The size of the data<br />
&nbsp;* \param error &nbsp; &nbsp; &nbsp; &nbsp; The error object<br />
&nbsp;* \return &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;NITF_FAILURE if an error occurred, otherwise NITF_SUCCESS<br />
&nbsp;*/</span><br />
<span class="kw4">typedef</span> NITF_BOOL <span class="br0">&#40;</span>*NITF_TRE_FIELD_SET<span class="br0">&#41;</span><span class="br0">&#40;</span>nitf_TRE * tre,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">const</span> <span class="kw4">char</span> *tag,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NITF_DATA * data,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; size_t dataLength,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nitf_Error * error<span class="br0">&#41;</span>;<br />
<br />
<span class="coMULTI">/*!<br />
&nbsp;* Returns the one Field with the given tag ID<br />
&nbsp;* \param tre &nbsp; &nbsp; &nbsp; The associated TRE<br />
&nbsp;* \param tag &nbsp; &nbsp; &nbsp; The tag, or name of the field to return<br />
&nbsp;* \return &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;the nitf_Field*, or NULL if it doesn't exist (or error)<br />
&nbsp;*/</span><br />
<span class="kw4">typedef</span> nitf_Field* <span class="br0">&#40;</span>*NITF_TRE_FIELD_GET<span class="br0">&#41;</span><span class="br0">&#40;</span>nitf_TRE * tre,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">const</span> <span class="kw4">char</span> *tag<span class="br0">&#41;</span>;<br />
<br />
<span class="coMULTI">/*!<br />
&nbsp;* Sets a field in the given TRE. It is up to the plug-in to <br />
&nbsp;* \param io &nbsp; &nbsp; &nbsp; &nbsp;The IOHandle to write to<br />
&nbsp;* \param tre &nbsp; &nbsp; &nbsp; The associated TRE to write<br />
&nbsp;* \param record &nbsp; &nbsp;The associated Record object<br />
&nbsp;* \param error The error object<br />
&nbsp;* \return &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;NITF_FAILURE if an error occurred, otherwise NITF_SUCCESS<br />
&nbsp;*/</span><br />
<span class="kw4">typedef</span> NITF_BOOL <span class="br0">&#40;</span>*NITF_TRE_WRITER<span class="br0">&#41;</span><span class="br0">&#40;</span>nitf_IOHandle io,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;nitf_TRE* tre,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw4">struct</span> _nitf_Record* record,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;nitf_Error *error<span class="br0">&#41;</span>;<br />
<br />
<span class="coMULTI">/*!<br />
&nbsp;* Returns the current size of the TRE. <br />
&nbsp;* \param tre &nbsp; &nbsp; &nbsp; The associated TRE<br />
&nbsp;* \param error &nbsp; &nbsp; The error object<br />
&nbsp;* \return &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;The size of the TRE, or -1 if an error occurred<br />
&nbsp;*/</span><br />
<span class="kw4">typedef</span> <span class="kw4">int</span> <span class="br0">&#40;</span>*NITF_TRE_SIZE<span class="br0">&#41;</span><span class="br0">&#40;</span>nitf_TRE *tre, nitf_Error *error<span class="br0">&#41;</span>;<br />
<br />
<span class="coMULTI">/*!<br />
&nbsp;* Sets a field in the given TRE. It is up to the plug-in to <br />
&nbsp;* \param source &nbsp; &nbsp;The source TRE to clone<br />
&nbsp;* \param dest &nbsp; &nbsp; &nbsp;The destination TRE, where the source will be cloned to<br />
&nbsp;* \param error &nbsp; &nbsp; The error object<br />
&nbsp;* \return &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;NITF_FAILURE if an error occurred, otherwise NITF_SUCCESS<br />
&nbsp;*/</span><br />
<span class="kw4">typedef</span> NITF_BOOL <span class="br0">&#40;</span>*NITF_TRE_CLONE<span class="br0">&#41;</span><span class="br0">&#40;</span>nitf_TRE *source,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nitf_TRE *dest,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nitf_Error *error<span class="br0">&#41;</span>;<br />
<br />
<span class="coMULTI">/*!<br />
&nbsp;* Destroy any internal data associated with the given TRE. You should not<br />
&nbsp;* destroy the TRE. It will be deleted by the library. <br />
&nbsp;* \param tre &nbsp; &nbsp; &nbsp; The associated TRE<br />
&nbsp;*/</span><br />
<span class="kw4">typedef</span> <span class="kw4">void</span> <span class="br0">&#40;</span>*NITF_TRE_DESTRUCT<span class="br0">&#41;</span><span class="br0">&#40;</span>nitf_TRE*<span class="br0">&#41;</span>;<br />
<br />
<span class="coMULTI">/*!<br />
&nbsp;* Returns a nitf_TREEnumerator for the TRE <br />
&nbsp;* \param tre &nbsp; &nbsp; &nbsp; The associated TRE<br />
&nbsp;* \param error &nbsp; &nbsp; The error object<br />
&nbsp;* \return &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;an enumerator, or NULL if an error occurred<br />
&nbsp;*/</span><br />
<span class="kw4">typedef</span> nitf_TREEnumerator* <span class="br0">&#40;</span>*NITF_TRE_ITERATOR<span class="br0">&#41;</span><span class="br0">&#40;</span>nitf_TRE *tre,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;nitf_Error *error<span class="br0">&#41;</span>;<br />
<br />
<br />
<br />
<span class="coMULTI">/*!<br />
&nbsp;* \brief The TRE Handler Interface<br />
&nbsp;* <br />
&nbsp;* This interface should be fulfilled by any plug-in that wants to handle a TRE.<br />
&nbsp;* View the documentation above for each of the methods below.<br />
&nbsp;* In addition to the methods, there is an optional data field (of type<br />
&nbsp;* NITF_DATA*) which allows the plug-in to store data associated with the<br />
&nbsp;* Handler.<br />
&nbsp;* <br />
&nbsp;*/</span><br />
<span class="kw4">typedef</span> <span class="kw4">struct</span> _nitf_TREHandler<br />
<span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="coMULTI">/* The init method gets called when creating a TRE from scratch */</span><br />
&nbsp; &nbsp; NITF_TRE_INIT init;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* The read method gets called when reading a TRE from an IOHandle */</span><br />
&nbsp; &nbsp; NITF_TRE_READER read;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* setField is called by the setField proxy of the TRE API */</span><br />
&nbsp; &nbsp; NITF_TRE_FIELD_SET setField;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* getField is called by the getField proxy of the TRE API */</span><br />
&nbsp; &nbsp; NITF_TRE_FIELD_GET getField;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* find is called by the find proxy of the TRE API */</span><br />
&nbsp; &nbsp; NITF_TRE_FIND find;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* write gets called when writing the TRE to an output IOHandle */</span><br />
&nbsp; &nbsp; NITF_TRE_WRITER write;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* begin is called by the begin proxy of the TRE API */</span><br />
&nbsp; &nbsp; NITF_TRE_ITERATOR begin;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* getCurrentSize is called by the getCurrentSize proxy of the TRE API */</span><br />
&nbsp; &nbsp; NITF_TRE_SIZE getCurrentSize;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* clone is called when a TRE is cloned */</span><br />
&nbsp; &nbsp; NITF_TRE_CLONE clone;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/*<br />
&nbsp; &nbsp; &nbsp;* destruct is called when a TRE is destroyed - NOT when the handler is.<br />
&nbsp; &nbsp; &nbsp;* destruct is an optional operation and doesn't need to be provided by<br />
&nbsp; &nbsp; &nbsp;* plug-in implementations<br />
&nbsp; &nbsp; &nbsp;*/</span><br />
&nbsp; &nbsp; NITF_TRE_DESTRUCT destruct;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="coMULTI">/* optional data that contains handler-wide data for supporting TREs of<br />
&nbsp; &nbsp; &nbsp;* the type that the plug-in handles<br />
&nbsp; &nbsp; &nbsp;*/</span><br />
&nbsp; &nbsp; NITF_DATA* data;<br />
<span class="br0">&#125;</span> nitf_TREHandler;<br />
<br />
<span class="coMULTI">/*============================================================================*/</span><br />
<span class="coMULTI">/*===========================END TRE HANDLER API==============================*/</span><br />
<span class="coMULTI">/*============================================================================*/</span></div>
<!--end GeSHi-->
<form action="http://nitro-nitf.sourceforge.net/wikka.php?wakka=TreDef/grabcode" method="post" id="form_61092f4ded">
<fieldset class="hidden">
	<input type="hidden" name="wakka" value="TreDef" />
</fieldset>
<input type="submit" class="grabcode" name="save" value="Grab" title="Download" /><input type="hidden" name="filename" value="" /><input type="hidden" name="code" value="%2F%2A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%2A%2F%0A%2F%2A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3DBEGIN+TRE+HANDLER+API%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%2A%2F%0A%2F%2A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%2A%2F%0A%0A%2F%2A%21%0A+%2A+The+plug-in+is+allowed+to+do+some+initialization+to+prepare+the+TRE%0A+%2A+%5Cparam+tre+++++++The+TRE+to+initialize%0A+%2A+%5Cparam+id++++++++An+optional+ID+used+to+further+specify+a+specific+version%2C+etc.%0A+%2A+%5Cparam+error+++++The+error+object%0A+%2A+%5Creturn++++++++++NITF_FAILURE+if+an+error+occurred%2C+otherwise+NITF_SUCCESS%0A+%2A%2F%0Atypedef+NITF_BOOL+%28%2ANITF_TRE_INIT%29+%28nitf_TRE%2A+tre%2C%0A%09%09%09%09%09%09%09%09%09const+char%2A+id%2C%0A%09%09%09%09%09%09%09%09%09nitf_Error+%2A+error%29%3B%0A%0A%2F%2A%21%0A+%2A+Read+data+from+the+given+IOHandle%2C+parsing+it+however+the+plug-in+desires.%0A+%2A+%5Cparam+io++++++++The+IOHandle+we+are+reading+from%0A+%2A+%5Cparam+length++++The+length+of+the+TRE+%28i.e.+%23+of+bytes+to+read%29%0A+%2A+%5Cparam+tre+++++++The+associated+TRE%0A+%2A+%5Cparam+record++++The+associated+Record+object%0A+%2A+%5Cparam+error+++++The+error+object%0A+%2A+%5Creturn++++++++++NITF_FAILURE+if+an+error+occurred%2C+otherwise+NITF_SUCCESS%0A+%2A%2F%0Atypedef+NITF_BOOL+%28%2ANITF_TRE_READER%29%28nitf_IOHandle+io%2C%0A%09%09%09%09%09%09%09%09%09+nitf_Uint32+length%2C%0A%09%09%09%09%09%09%09%09%09+nitf_TRE+%2Atre%2C%0A%09%09%09%09%09%09%09%09%09+struct+_nitf_Record+%2Arecord%2C%0A%09%09%09%09%09%09%09%09%09+nitf_Error+%2Aerror%29%3B%0A%0A%0A%2F%2A%21%0A+%2A+Returns+a+nitf_List%2A+of+Fields+that+match+the+input+XPath-like+pattern.%0A+%2A+%5Cparam+tre+++++++The+associated+TRE%0A+%2A+%5Cparam+pattern+++The+XPath+pattern+used+to+search+for+fields%0A+%2A+%5Cparam+error+++++The+error+object%0A+%2A+%5Creturn++++++++++nitf_List%2A+of+fields%2C+or+NULL+if+an+error+occurred%0A+%2A%2F%0Atypedef+nitf_List%2A+%28%2ANITF_TRE_FIND%29%28nitf_TRE+%2A+tre%2C%0A%09%09%09%09%09%09%09%09%09const+char+%2Apattern%2C%0A%09%09%09%09%09%09%09%09%09nitf_Error%2A+error%29%3B%0A%0A%0A%2F%2A%21%0A+%2A+Sets+a+field+in+the+given+TRE.+It+is+up+to+the+plug-in+to+%0A+%2A+%5Cparam+tre+++++++++++The+associated+TRE%0A+%2A+%5Cparam+tag+++++++++++The+name+of+the+field%0A+%2A+%5Cparam+data++++++++++The+data+%28void%2A%29+to+set+the+field+to%0A+%2A+%5Cparam+dataLength++++The+size+of+the+data%0A+%2A+%5Cparam+error+++++++++The+error+object%0A+%2A+%5Creturn++++++++++++++NITF_FAILURE+if+an+error+occurred%2C+otherwise+NITF_SUCCESS%0A+%2A%2F%0Atypedef+NITF_BOOL+%28%2ANITF_TRE_FIELD_SET%29%28nitf_TRE+%2A+tre%2C%0A%09%09%09%09%09%09%09%09%09%09const+char+%2Atag%2C%0A%09%09%09%09%09%09%09%09%09%09NITF_DATA+%2A+data%2C%0A%09%09%09%09%09%09%09%09%09%09size_t+dataLength%2C%0A%09%09%09%09%09%09%09%09%09%09nitf_Error+%2A+error%29%3B%0A%0A%2F%2A%21%0A+%2A+Returns+the+one+Field+with+the+given+tag+ID%0A+%2A+%5Cparam+tre+++++++The+associated+TRE%0A+%2A+%5Cparam+tag+++++++The+tag%2C+or+name+of+the+field+to+return%0A+%2A+%5Creturn++++++++++the+nitf_Field%2A%2C+or+NULL+if+it+doesn%27t+exist+%28or+error%29%0A+%2A%2F%0Atypedef+nitf_Field%2A+%28%2ANITF_TRE_FIELD_GET%29%28nitf_TRE+%2A+tre%2C%0A%09%09%09%09%09%09%09%09%09%09++const+char+%2Atag%29%3B%0A%0A%2F%2A%21%0A+%2A+Sets+a+field+in+the+given+TRE.+It+is+up+to+the+plug-in+to+%0A+%2A+%5Cparam+io++++++++The+IOHandle+to+write+to%0A+%2A+%5Cparam+tre+++++++The+associated+TRE+to+write%0A+%2A+%5Cparam+record++++The+associated+Record+object%0A+%2A+%5Cparam+error+The+error+object%0A+%2A+%5Creturn++++++++++NITF_FAILURE+if+an+error+occurred%2C+otherwise+NITF_SUCCESS%0A+%2A%2F%0Atypedef+NITF_BOOL+%28%2ANITF_TRE_WRITER%29%28nitf_IOHandle+io%2C%0A%09%09%09%09%09%09%09%09%09+nitf_TRE%2A+tre%2C%0A%09%09%09%09%09%09%09%09%09+struct+_nitf_Record%2A+record%2C%0A%09%09%09%09%09%09%09%09%09+nitf_Error+%2Aerror%29%3B%0A%0A%2F%2A%21%0A+%2A+Returns+the+current+size+of+the+TRE.+%0A+%2A+%5Cparam+tre+++++++The+associated+TRE%0A+%2A+%5Cparam+error+++++The+error+object%0A+%2A+%5Creturn++++++++++The+size+of+the+TRE%2C+or+-1+if+an+error+occurred%0A+%2A%2F%0Atypedef+int+%28%2ANITF_TRE_SIZE%29%28nitf_TRE+%2Atre%2C+nitf_Error+%2Aerror%29%3B%0A%0A%2F%2A%21%0A+%2A+Sets+a+field+in+the+given+TRE.+It+is+up+to+the+plug-in+to+%0A+%2A+%5Cparam+source++++The+source+TRE+to+clone%0A+%2A+%5Cparam+dest++++++The+destination+TRE%2C+where+the+source+will+be+cloned+to%0A+%2A+%5Cparam+error+++++The+error+object%0A+%2A+%5Creturn++++++++++NITF_FAILURE+if+an+error+occurred%2C+otherwise+NITF_SUCCESS%0A+%2A%2F%0Atypedef+NITF_BOOL+%28%2ANITF_TRE_CLONE%29%28nitf_TRE+%2Asource%2C%0A%09%09%09%09%09%09%09%09%09nitf_TRE+%2Adest%2C%0A%09%09%09%09%09%09%09%09%09nitf_Error+%2Aerror%29%3B%0A%0A%2F%2A%21%0A+%2A+Destroy+any+internal+data+associated+with+the+given+TRE.+You+should+not%0A+%2A+destroy+the+TRE.+It+will+be+deleted+by+the+library.+%0A+%2A+%5Cparam+tre+++++++The+associated+TRE%0A+%2A%2F%0Atypedef+void+%28%2ANITF_TRE_DESTRUCT%29%28nitf_TRE%2A%29%3B%0A%0A%2F%2A%21%0A+%2A+Returns+a+nitf_TREEnumerator+for+the+TRE+%0A+%2A+%5Cparam+tre+++++++The+associated+TRE%0A+%2A+%5Cparam+error+++++The+error+object%0A+%2A+%5Creturn++++++++++an+enumerator%2C+or+NULL+if+an+error+occurred%0A+%2A%2F%0Atypedef+nitf_TREEnumerator%2A+%28%2ANITF_TRE_ITERATOR%29%28nitf_TRE+%2Atre%2C%0A%09%09%09%09%09%09%09%09%09%09%09%09+nitf_Error+%2Aerror%29%3B%0A%0A%0A%0A%2F%2A%21%0A+%2A+%5Cbrief+The+TRE+Handler+Interface%0A+%2A+%0A+%2A+This+interface+should+be+fulfilled+by+any+plug-in+that+wants+to+handle+a+TRE.%0A+%2A+View+the+documentation+above+for+each+of+the+methods+below.%0A+%2A+In+addition+to+the+methods%2C+there+is+an+optional+data+field+%28of+type%0A+%2A+NITF_DATA%2A%29+which+allows+the+plug-in+to+store+data+associated+with+the%0A+%2A+Handler.%0A+%2A+%0A+%2A%2F%0Atypedef+struct+_nitf_TREHandler%0A%7B%0A%09%2F%2A+The+init+method+gets+called+when+creating+a+TRE+from+scratch+%2A%2F%0A%09NITF_TRE_INIT+init%3B%0A%09%0A%09%2F%2A+The+read+method+gets+called+when+reading+a+TRE+from+an+IOHandle+%2A%2F%0A%09NITF_TRE_READER+read%3B%0A%09%0A%09%2F%2A+setField+is+called+by+the+setField+proxy+of+the+TRE+API+%2A%2F%0A%09NITF_TRE_FIELD_SET+setField%3B%0A%09%0A%09%2F%2A+getField+is+called+by+the+getField+proxy+of+the+TRE+API+%2A%2F%0A%09NITF_TRE_FIELD_GET+getField%3B%0A%09%0A%09%2F%2A+find+is+called+by+the+find+proxy+of+the+TRE+API+%2A%2F%0A%09NITF_TRE_FIND+find%3B%0A%09%0A%09%2F%2A+write+gets+called+when+writing+the+TRE+to+an+output+IOHandle+%2A%2F%0A%09NITF_TRE_WRITER+write%3B%0A%09%0A%09%2F%2A+begin+is+called+by+the+begin+proxy+of+the+TRE+API+%2A%2F%0A%09NITF_TRE_ITERATOR+begin%3B%0A%09%0A%09%2F%2A+getCurrentSize+is+called+by+the+getCurrentSize+proxy+of+the+TRE+API+%2A%2F%0A%09NITF_TRE_SIZE+getCurrentSize%3B%0A%09%0A%09%2F%2A+clone+is+called+when+a+TRE+is+cloned+%2A%2F%0A%09NITF_TRE_CLONE+clone%3B%0A%09%0A%09%2F%2A%0A%09+%2A+destruct+is+called+when+a+TRE+is+destroyed+-+NOT+when+the+handler+is.%0A%09+%2A+destruct+is+an+optional+operation+and+doesn%27t+need+to+be+provided+by%0A%09+%2A+plug-in+implementations%0A%09+%2A%2F%0A%09NITF_TRE_DESTRUCT+destruct%3B%0A%09%0A%09%2F%2A+optional+data+that+contains+handler-wide+data+for+supporting+TREs+of%0A%09+%2A+the+type+that+the+plug-in+handles%0A%09+%2A%2F%0A%09NITF_DATA%2A+data%3B%0A%7D+nitf_TREHandler%3B%0A%0A%2F%2A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%2A%2F%0A%2F%2A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3DEND+TRE+HANDLER+API%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%2A%2F%0A%2F%2A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%2A%2F" /></form>

</div>
				<div class="commentsheader">
				<p>There are 9 comments on this page. 				[<a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=TreDef&amp;show_comments=1#comments">Display comments</a>]</p>
				</div>
				<div class="footer">
<form action="http://nitro-nitf.sourceforge.net/wikka.php?wakka=TreDef" id="form_c2b696fff2">
<fieldset class="hidden">
	<input type="hidden" name="wakka" value="TextSearch" />
</fieldset>
<a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=TreDef/history" title="Click to view recent edits to this page">Page History</a> ::
<a class="datetime" href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=TreDef/revisions" title="Click to view recent revisions list for this page">2008-07-22 05:41:27</a> <a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=TreDef/revisions.xml" title="Click to display a feed with the latest revisions to this page."><img src="images/xml.png" class="icon" width="36" height="14" alt="feed icon" /></a> ::
Owner: <a href="http://nitro-nitf.sourceforge.net/wikka.php?wakka=NitroAdmin">NitroAdmin</a> ::

 
Search: <input name="phrase" size="15" class="searchbox" />
</form>
</div>
<div class="smallprint">
<a class="ext" href="http://validator.w3.org/check/referer">Valid XHTML 1.0 Transitional</a><span class="exttail">&#8734;</span> ::
<a class="ext" href="http://jigsaw.w3.org/css-validator/check/referer">Valid CSS</a><span class="exttail">&#8734;</span> ::
Powered by <a class="ext" href="http://wikkawiki.org/">Wikka Wakka Wiki 1.1.6.4</a><span class="exttail">&#8734;</span></div>
<div style="float:left;">
<a href="http://sourceforge.net/" target="_blank" title="The world's largest development and download repository of Open Source code and applications"><img style="width: 151px; height: 38px;" src="http://web.sourceforge.com/images/footer/source.gif" alt="SourceForge.net" class="pad28" border="0" height="38" width="151"></a>
</div>
<div class="smallprint">Page was generated in 0.0440 seconds</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-3779761-1");
pageTracker._initData();
pageTracker._trackPageview();
</script>
<script type="text/javascript">
var pkBaseURL = (("https:" == document.location.protocol) ? "https://apps.sourceforge.net/piwik/nitro-nitf/" : "http://apps.sourceforge.net/piwik/nitro-nitf/");
document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
</script><script type="text/javascript">
piwik_action_name = '';
piwik_idsite = 1;
piwik_url = pkBaseURL + "piwik.php";
piwik_log(piwik_action_name, piwik_idsite, piwik_url);
</script>
<object><noscript><p><img src="http://apps.sourceforge.net/piwik/nitro-nitf/piwik.php?idsite=1" alt="piwik"/></p></noscript></object>
</body>
</html>