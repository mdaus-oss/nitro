name: build_unittest

on: [push]

jobs:
  build-cmake-windows:
    strategy:
      matrix:
        os: [windows-latest]
        configuration: [Release, Debug]
    name: ${{ matrix.os }}-CMake-${{ matrix.configuration }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: configure
      run: |
        ls env:
        mkdir target-${{ matrix.configuration }}
        cd target-${{ matrix.configuration }}
        cmake .. -DCMAKE_INSTALL_PREFIX=install${{ matrix.os }}CMake-Github
    - name: build
      run: |
        cd target-${{ matrix.configuration }}
        cmake --build . --config ${{ matrix.configuration }} -j
    - name: test # should run w/o install
      run: |
        cd target-${{ matrix.configuration }}
        ctest -C ${{ matrix.configuration }} --output-on-failure
    - name: install
      run: |
        cd target-${{ matrix.configuration }}
        cmake --build . --config ${{ matrix.configuration }} --target install

  build-msbuild-windows:
    strategy:
      matrix:
        os: [windows-latest]
        platform: [x64]
        configuration: [Debug] # Debug turns on more compiler warnings
        avx: [AVX2, AVX512F]
    name: ${{ matrix.os }}-${{ matrix.avx }}-msbuild
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: configure
      run: |
        ls env:
        mkdir out
        cd out
        cmake .. -DCMAKE_INSTALL_PREFIX=install\${{ matrix.platform }}-${{ matrix.configuration }}
    - name: build
      run: |
        cd out
        cmake --build . --config ${{ matrix.configuration }} -j
        cmake --build . --config ${{ matrix.configuration }} --target install
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2 # https://github.com/marketplace/actions/setup-msbuild
      with:
        msbuild-architecture: x64
    - name: msbuild
      run: |
        msbuild coda-oss.sln /p:configuration=${{ matrix.configuration }}
    # Can't figure out how to make this work :-(
    #- name: vstest 
    #  uses: microsoft/vstest-action@v1.0.0 # https://github.com/marketplace/actions/vstest-action
    #  with:
    #      testAssembly: UnitTest.dll
    #      searchFolder: D:\a\nitro\nitro\${{ matrix.platform }}\${{ matrix.configuration }}
    #      runInParallel: true  

  build-linux-cmake-default:
    strategy:
      matrix:
        os: [ubuntu-latest]
    name: ${{ matrix.os }}-CMake
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: configure
      run: |
        env
        mkdir target && cd target
        export CC=gcc-11
        export CXX=g++-11
        cmake .. -DCMAKE_INSTALL_PREFIX=install${{ matrix.os }}CMake-Github
    - name: build
      run: |
        cd target
        # "-j" spawns too many processes causing GCC to crash
        cmake --build . -j 12
    - name: test
    # should run w/o install
      run: |
        cd target
        ctest --output-on-failure
    - name: install
      run: |
        cd target
        cmake --build . --target install
